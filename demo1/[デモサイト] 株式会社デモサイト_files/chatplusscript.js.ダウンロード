(function(global) {
	var jpChatplusOnComplete = true;
	var getCookie = function(c_name) {
		var st="";
		var ed="";
		if(document.cookie.length>0){
			// クッキーの値を取り出す
			st=document.cookie.indexOf(c_name + "=");
			if(st!=-1){
				st=st+c_name.length+1;
				ed=document.cookie.indexOf(";",st);
				if(ed==-1) ed=document.cookie.length;
				// 値をデコードして返す
				return unescape(document.cookie.substring(st,ed));
			}
		}
		return "";
	};
	var postMessage = function(data) {
		if (location.protocol+'//'+location.hostname === __cp_d && /^\/chat\/visitor\//.test(location.pathname)) {
			switch (data.type) {
				case "edit-lead": {
					data.params["accessToken"] = data.token;
					data.params["siteId"] = data.siteId;
					data.params["token"] = data.vtoken;

					jQueryPlus.ajax({
						type: "POST",
						url: "/api/v1/update_user",
						data: data.params
					}).done(function (data, status, xhr) {
						if (_chatplusscript_updateUser_callback) {
							_chatplusscript_updateUser_callback.call(this, data);
							_chatplusscript_updateUser_callback = null;
						}
					}).fail(function (xhr, status, error) {
						if (_chatplusscript_updateUser_callback) {
							_chatplusscript_updateUser_callback.call(this, {'result':-1, 'code':xhr.status});
							_chatplusscript_updateUser_callback = null;
						}
					});

					break;
				}
				case "get-lead-one": {
					jQueryPlus.ajax({
						type: "POST",
						url: "/api/v1/get_lead_one",
						data: {accessToken:data.token, siteId:data.siteId, token:data.vtoken}
					}).done(function (data, status, xhr) {
						if (_chatplusscript_getLeadOne_callback) {
							_chatplusscript_getLeadOne_callback.call(this, data);
							_chatplusscript_getLeadOne_callback = null;
						}
					}).fail(function (xhr, status, error) {
						if (_chatplusscript_getLeadOne_callback) {
							_chatplusscript_getLeadOne_callback.call(this, {'result':-1, 'code':xhr.status});
							_chatplusscript_getLeadOne_callback = null;
						}
					});
					break;
				}
				case "get-visitor-option": {
					var cookie_key_option = 'chatplus_visitor_option' + '_' + data.access_key;
					var option = {};

					if ((new RegExp("(?:^|;\\s*)" + escape(cookie_key_option).replace(/[\-\.\+\*]/g, "\\$&") + "\\s*\\=")).test(window.document.cookie)) {
						var option_s = unescape(window.document.cookie.replace(new RegExp("(?:^|.*;\\s*)" + escape(cookie_key_option).replace(/[\-\.\+\*]/g, "\\$&") + "\\s*\\=\\s*((?:[^;](?!;))*[^;]?).*"), "$1"));
						var option = JSON.parse(option_s);
					}

					window.chatplus.option = data.option;
					break;
				}
			}
		} else {
			var iframe = document.getElementById("jp.chatplus.app_chat_frame");
			if (iframe) {
				iframe.contentWindow.postMessage(data,"*");
			} else {
				console.error('iframe#jp.chatplus.app_chat_frame not found.');
			}
		}
	};

	global.ChatplusScript = {};
	global._chatplusscript_updateUser_callback = null;
	global._chatplusscript_getLeadOne_callback = null;

	ChatplusScript.updateUser = function(token, siteId, params, callback) {
		global._chatplusscript_updateUser_callback = callback || null;

		var chatplusintervalID = setInterval(function(data){
			if (jpChatplusOnComplete) {
				clearInterval(chatplusintervalID);

				var data = {type:"edit-lead",token:data.token,siteId:data.siteId,params:data.params};
				if (getCookie("jp_chatplus_vtoken")) {
					data["vtoken"] = getCookie("jp_chatplus_vtoken");
				}

				postMessage(data);
			}
		}, 300, {token:token, siteId:siteId, params:params});
	};
	ChatplusScript.getLead = function(token, siteId, callback) {
		global._chatplusscript_getLeadOne_callback = callback;

		var chatplusintervalID = setInterval(function(data){
			if (jpChatplusOnComplete) {
				clearInterval(chatplusintervalID);

				var data = {type:"get-lead-one",token:token,siteId:siteId};
				if (getCookie("jp_chatplus_vtoken")) {
					data["vtoken"] = getCookie("jp_chatplus_vtoken");
				}

				postMessage(data);
			}
		}, 300, {token:token, siteId:siteId});
	};
	ChatplusScript.openChat = function() {
		var e = document.querySelector('#chatplusview #openChat');
		if (e) {e.click();}
	};


	global.ChatplusAppScript = {};
	ChatplusAppScript.getLead = function(token, siteId, callback) {
		var chatplusintervalID = setInterval(function(data){
			if (jpChatplusOnComplete) {
				clearInterval(chatplusintervalID);

				data["visitorId"] = va;

				jQueryPlus.ajax({
					type: "POST",
					url: __cp_d+"/api/v1/get_visitor_one",
					data: data}).done(function (result, status, xhr) {
					callback.call(this, result);
				}).fail(function (xhr, status, error) {
					callback.call(this, {result:-1, errorCode:xhr.status});
				});
			}
		}, 300, {accessToken:token, siteId:siteId, option:1});
	}


	global.ChatplusAction = {};
	ChatplusAction.addVisitorTag = function(accessKey, siteId, visitorId, tags) {
		var callback = null;
		if (arguments[4]) callback = arguments[4];
		jQueryPlus.ajax({url: __cp_d+"/api/action/addvisitortag", method: 'POST', data: {key: accessKey + '_' + siteId, visitorId:visitorId, tags:JSON.stringify(tags)}
		}).done(function(data){
			if (callback) callback.call(this, data );
		}).fail(function(){ if (callback) callback.call(this, data ); });
	};
	ChatplusAction.addVisitorAttribute = function(accessKey, siteId, visitorId, attrs) {
		var callback = null;
		if (arguments[4]) callback = arguments[4];
		jQueryPlus.ajax({url: __cp_d+"/api/action/addvisitorattribute", method: 'POST', data: {key: accessKey + '_' + siteId, visitorId:visitorId, attrs:JSON.stringify(attrs)}
		}).done(function(data){
			if (callback) callback.call(this, data );
		}).fail(function(){ if (callback) callback.call(this, data ); });
	};
	ChatplusAction.addVisitorAttributeEx = function(accessKey, siteId, visitorId, attrs) {
		var callback = null;
		if (arguments[4]) callback = arguments[4];
		jQueryPlus.ajax({url: __cp_d+"/api/action/addvisitorattribute", method: 'POST', data: {key: accessKey + '_' + siteId, visitorId:visitorId, attrs:JSON.stringify(attrs), ex:true}
		}).done(function(data){
			if (callback) callback.call(this, data );
		}).fail(function(){ if (callback) callback.call(this, data ); });
	};
	ChatplusAction.addAgentTag = function(accessKey, siteId, agentId, tags) {
		var callback = null;
		if (arguments[4]) callback = arguments[4];
		jQueryPlus.ajax({url: __cp_d+"/api/action/addagenttag", method: 'POST', data: {key: accessKey + '_' + siteId, agentId:agentId, tags:JSON.stringify(tags)}
		}).done(function(data){
			if (callback) callback.call(this, data );
		}).fail(function(){ if (callback) callback.call(this, data ); });
	};
	ChatplusAction.addChatTag = function(accessKey, siteId, chatId, tags) {
		var callback = null;
		if (arguments[4]) callback = arguments[4];
		jQueryPlus.ajax({url: __cp_d+"/api/action/addchattag", method: 'POST', data: {key: accessKey + '_' + siteId, chatId:chatId, tags:JSON.stringify(tags)}
		}).done(function(data){
			if (callback) callback.call(this, data );
		}).fail(function(){ if (callback) callback.call(this, data ); });
	};
	ChatplusAction.postback = function(accessKey, siteId, visitorId, params) {
		var callback = null;
		if (arguments[4]) callback = arguments[4];
		jQueryPlus.ajax({
			url: __cp_d + "/api/action/postback",
			method: 'POST',
			data: {key: accessKey + '_' + siteId, visitorId:visitorId, params: JSON.stringify(params)}
		}).done(function (data) {
			if (callback) callback.call(this, data);
		}).fail(function () {
			if (callback) callback.call(this, data);
		});
	};

	if ('freeze' in Object) {
		Object.freeze(ChatplusScript);
		Object.freeze(ChatplusAppScript);
		Object.freeze(ChatplusAction);
	}
})(window);
